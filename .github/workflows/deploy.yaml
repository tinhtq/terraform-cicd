name: Deploy to AWS
permissions:
  issues: write

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to deploy'
        required: true
        default: 'main'
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'develop'
        type: choice
        options:
        - develop
        - uat
        - production
      application:
        description: 'Application to deploy'
        required: true
        default: 'application1'
        type: choice
        options:
        - application1
        - application2
env:
  AWS_REGION: us-east-1     
jobs:
  check_app:
    name: Check Folder
    runs-on: ubuntu-latest
    outputs:
      folder: ${{ steps.check_app.outputs.folder }}
    steps:
      - name: Check Folder
        id: check_app
        run: |
          if [[ "${{ github.event.inputs.environment }}" == "develop" ]]; then
            echo "folder=dev" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event.inputs.environment }}" == "uat" ]]; then
            echo "folder=uat" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event.inputs.environment }}" == "production" ]]; then
            echo "folder=prod" >> $GITHUB_OUTPUT
          fi

  terraform:
    name: Terraform Plan
    runs-on: ubuntu-latest
    needs: check_app
    defaults:
      run:
        working-directory: terraform/${{ needs.check_app.outputs.folder }}/${{ needs.check_app.outputs.folder }}_${{ github.event.inputs.application }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.inputs.branch }}

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.7.5 

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets[format('{0}_{1}', 'AWS_ACCESS_KEY_ID', needs.check_app.outputs.folder)] }}
        aws-secret-access-key: ${{ secrets[format('{0}_{1}', 'AWS_SECRET_ACCESS_KEY', needs.check_app.outputs.folder)] }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Terraform Init
      run: terraform init

    - name: Terraform Validate
      run: terraform validate

    - name: Terraform Plan
      id: terraform-plan
      run: terraform plan

    - uses: trstringer/manual-approval@v1
      with:
        secret: ${{ github.TOKEN }}
        approvers: tinhtq
        minimum-approvals: 1
        issue-title: "Deploying v1.3.5 to prod from staging"
        issue-body: "Please approve or deny the deployment of version v1.3.5."
        exclude-workflow-initiator-as-approver: false
        additional-approved-words: ''
        additional-denied-words: ''
  
    - name: Apply Terraform
      run: terraform apply -auto-approve
